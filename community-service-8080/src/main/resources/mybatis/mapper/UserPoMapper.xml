<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zhangguimin.community.dao.UserPoMapper">
  <resultMap id="BaseResultMap" type="cn.zhangguimin.community.po.UserPo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="active_email" jdbcType="INTEGER" property="activeEmail" />
    <result column="comments" jdbcType="INTEGER" property="comments" />
    <result column="fans" jdbcType="INTEGER" property="fans" />
    <result column="favors" jdbcType="INTEGER" property="favors" />
    <result column="follows" jdbcType="INTEGER" property="follows" />
    <result column="posts" jdbcType="INTEGER" property="posts" />
    <result column="signature" jdbcType="DATE" property="signature" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, login_name, mobile, email, password, avatar, last_login, gender, role_id, 
    active_email, comments, fans, favors, follows, posts, signature, status, type, created
  </sql>
  <select id="selectByExample" parameterType="cn.zhangguimin.community.po.UserPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zhangguimin.community.po.UserPoExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zhangguimin.community.po.UserPo">
    insert into user (id, user_name, login_name, 
      mobile, email, password, 
      avatar, last_login, gender, 
      role_id, active_email, comments, 
      fans, favors, follows, 
      posts, signature, status, 
      type, created)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP}, #{gender,jdbcType=INTEGER}, 
      #{roleId,jdbcType=BIGINT}, #{activeEmail,jdbcType=INTEGER}, #{comments,jdbcType=INTEGER}, 
      #{fans,jdbcType=INTEGER}, #{favors,jdbcType=INTEGER}, #{follows,jdbcType=INTEGER}, 
      #{posts,jdbcType=INTEGER}, #{signature,jdbcType=DATE}, #{status,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.zhangguimin.community.po.UserPo">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="activeEmail != null">
        active_email,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="fans != null">
        fans,
      </if>
      <if test="favors != null">
        favors,
      </if>
      <if test="follows != null">
        follows,
      </if>
      <if test="posts != null">
        posts,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="activeEmail != null">
        #{activeEmail,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=INTEGER},
      </if>
      <if test="fans != null">
        #{fans,jdbcType=INTEGER},
      </if>
      <if test="favors != null">
        #{favors,jdbcType=INTEGER},
      </if>
      <if test="follows != null">
        #{follows,jdbcType=INTEGER},
      </if>
      <if test="posts != null">
        #{posts,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zhangguimin.community.po.UserPoExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLogin != null">
        last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.activeEmail != null">
        active_email = #{record.activeEmail,jdbcType=INTEGER},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=INTEGER},
      </if>
      <if test="record.fans != null">
        fans = #{record.fans,jdbcType=INTEGER},
      </if>
      <if test="record.favors != null">
        favors = #{record.favors,jdbcType=INTEGER},
      </if>
      <if test="record.follows != null">
        follows = #{record.follows,jdbcType=INTEGER},
      </if>
      <if test="record.posts != null">
        posts = #{record.posts,jdbcType=INTEGER},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      gender = #{record.gender,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=BIGINT},
      active_email = #{record.activeEmail,jdbcType=INTEGER},
      comments = #{record.comments,jdbcType=INTEGER},
      fans = #{record.fans,jdbcType=INTEGER},
      favors = #{record.favors,jdbcType=INTEGER},
      follows = #{record.follows,jdbcType=INTEGER},
      posts = #{record.posts,jdbcType=INTEGER},
      signature = #{record.signature,jdbcType=DATE},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zhangguimin.community.po.UserPo">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="activeEmail != null">
        active_email = #{activeEmail,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=INTEGER},
      </if>
      <if test="fans != null">
        fans = #{fans,jdbcType=INTEGER},
      </if>
      <if test="favors != null">
        favors = #{favors,jdbcType=INTEGER},
      </if>
      <if test="follows != null">
        follows = #{follows,jdbcType=INTEGER},
      </if>
      <if test="posts != null">
        posts = #{posts,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zhangguimin.community.po.UserPo">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=BIGINT},
      active_email = #{activeEmail,jdbcType=INTEGER},
      comments = #{comments,jdbcType=INTEGER},
      fans = #{fans,jdbcType=INTEGER},
      favors = #{favors,jdbcType=INTEGER},
      follows = #{follows,jdbcType=INTEGER},
      posts = #{posts,jdbcType=INTEGER},
      signature = #{signature,jdbcType=DATE},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>